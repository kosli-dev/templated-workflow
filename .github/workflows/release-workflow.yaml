name: Reusable Release Workflow

on:
    workflow_dispatch: 
        inputs:
            docker-image:
                description: 'Docker image to use'
                required: true
                default: 'ghcr.io/kosli-dev/templated-workflow:efe3729b'
                type: string
    workflow_call:
        inputs:
            docker-image:
                description: 'Docker image to use'
                required: true
                type: string
env:
  BUILD_NUMBER: ${{ github.run_number }}
  GIT_REPO: ${{ github.repository }}
  GIT_REPO_URL: ${{ github.event.repository.clone_url }}
  IMAGE: ${{ github.repository_owner }}/${{ github.event.repository.name }}
  BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  COMMIT_URL: ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}
  KOSLI_API_TOKEN: ${{ secrets.KOSLI_API_KEY }} # Set the Kosli API token as a secret in your repository
  KOSLI_ORG: kosli-public
  KOSLI_FLOW:  ${{ github.event.repository.name }}
  KOSLI_TRAIL: ${{ github.sha }} # Use the full Git SHA for the trail
  
jobs:
    release:
        runs-on: ubuntu-latest
        steps:
            - name: echo release
              run: echo "Releasing ${{ inputs.docker-image }}"
            - name: Clone down repository
              uses: actions/checkout@v4
            - name: setup-kosli-cli
              uses: kosli-dev/setup-cli-action@v2
            - name: Download container image
              run: docker pull ${{ inputs.docker-image }}
            - name: Get trail from Kosli
              env:
                IMAGE: ${{ inputs.docker-image }}
              id: get_trail # Assign an ID to this step to reference its outputs
              uses: actions/github-script@v7
              with:
                script: |
                  const { execSync } = require('child_process');
                  const fingerprint = execSync(`kosli fingerprint --artifact-type=docker $IMAGE`, { encoding: 'utf-8' }).split("\n")[0];
                  execSync(`kosli search ${fingerprint} -o json > data.json`, { encoding: 'utf-8' });
                  const trail = execSync(`jq -r '.artifacts[0].trail' < data.json`, { encoding: 'utf-8' });
                  execSync(`kosli get trail -o json ${trail} > trail.json`, { encoding: 'utf-8' });
            - name: Kosli complete action
              uses: ./template-complete-action
              with:
                json_file_path: trail.json
                status_to_find: MISSING